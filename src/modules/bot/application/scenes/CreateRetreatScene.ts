import { Markup } from 'telegraf';
import { Scene, Hears, Action, SceneEnter, On, Ctx, SceneLeave, Command } from 'nestjs-telegraf';

import { Context } from '@core/types';
import { SceneNames } from '../types';

@Scene(SceneNames.CreateRetreat)
export class CreateRetreatScene {
    @SceneEnter()
    public async onSceneEnter(ctx: Context) {
        await ctx.reply('–ù–∞—á–∞—Ç—å —Ä–µ—Ç—Ä–∏—Ç', Markup
            .keyboard([['üîô–í–µ—Ä–Ω—É—Ç—å—Å—è']])
            .resize(),
        );
    }

    @SceneLeave()
    public onSceneLeave(): string {
        return 'Bye Bye üëã';
    }

    @Command(['leave'])
    @Hears('üîô–í–µ—Ä–Ω—É—Ç—å—Å—è')
    public async goBack(@Ctx() ctx: Context) {
        await ctx.scene.enter(SceneNames.Main);
    }

    @Action('setStartDate')
    public async setStartDate(@Ctx() ctx: Context) {
        await ctx.reply('üëç');
    }

    @On('text')
    public async onText(@Ctx() ctx: Context) {
        await ctx.reply(
            '–ñ–∏–∑–Ω—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞',
            Markup.inlineKeyboard([
                Markup.button.callback('–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Ä–µ—Ç—Ä–∏—Ç', 'setStartDate'),
            ]),
        );
    }
}
