import { Markup } from 'telegraf';
import { Scene, Hears, SceneEnter, Action, On, Ctx, SceneLeave } from 'nestjs-telegraf';
import { SceneNames } from '../types';
import { Context } from '@core/types';

@Scene(SceneNames.Main)
export class MainScene {
    @SceneEnter()
    public async onSceneEnter(ctx: Context) {
        await ctx.reply(
            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
            Markup.keyboard([['üå∫–ù–∞—á–∞—Ç—å —Ä–µ—Ç—Ä–∏—Ç']]).resize(),
        );
    }

    @SceneLeave()
    public async onSceneLeave(@Ctx() ctx: Context) {
        await ctx.reply('üëã');
    }

    @On('sticker')
    public async on(@Ctx() ctx: Context) {
        await ctx.reply('üëç');
    }

    @Action('startRetreat')
    @Hears('üå∫–ù–∞—á–∞—Ç—å —Ä–µ—Ç—Ä–∏—Ç')
    public async hears(@Ctx() ctx: Context) {
        await ctx.scene.enter(SceneNames.CreateRetreat);
    }

    @On('text')
    public async onText(@Ctx() ctx: Context) {
        await ctx.reply(
            '–ñ–∏–∑–Ω—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞',
            Markup.inlineKeyboard([
                Markup.button.callback('üå∫–ù–∞—á–∞—Ç—å —Ä–µ—Ç—Ä–∏—Ç', 'startRetreat'),
            ]),
        );
    }
}
